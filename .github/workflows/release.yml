name: Release Pipeline

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  NODE_VERSION: '18'

jobs:
  # Validate release
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          echo "version=${VERSION#v}" >> $GITHUB_OUTPUT
          echo "tag=${VERSION}" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Validate version format
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if ! echo "$VERSION" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?(\+[a-zA-Z0-9.-]+)?$' > /dev/null; then
            echo "Invalid version format: $VERSION"
            exit 1
          fi
          echo "Version format is valid: $VERSION"

      - name: Check if version exists
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if npm view baseline-lint@$VERSION version > /dev/null 2>&1; then
            echo "Version $VERSION already exists on npm"
            exit 1
          fi
          echo "Version $VERSION is available for release"

      - name: Run full test suite
        run: |
          npm run test:all
          chmod +x bin/cli.js
          ./bin/cli.js check ./src --fail-on-error

      - name: Build and test package
        run: |
          npm pack
          npm install -g baseline-lint-*.tgz
          baseline-lint --version
          baseline-lint check ./src

  # Create GitHub Release
  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: validate
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version info
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          echo "version=${VERSION#v}" >> $GITHUB_OUTPUT
          echo "tag=${VERSION}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          if git describe --tags --abbrev=0 HEAD~1 > /dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1)
            echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT
          else
            echo "last_tag=" >> $GITHUB_OUTPUT
          fi

      - name: Create release notes
        id: release-notes
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          TAG="${{ steps.version.outputs.tag }}"
          LAST_TAG="${{ steps.changelog.outputs.last_tag }}"
          
          echo "## 🎯 baseline-lint $TAG" > release-notes.md
          echo "" >> release-notes.md
          echo "### ✨ What's New" >> release-notes.md
          echo "" >> release-notes.md
          
          if [ -n "$LAST_TAG" ]; then
            echo "**Changes since $LAST_TAG:**" >> release-notes.md
            echo "" >> release-notes.md
            git log --pretty=format:"- %s" $LAST_TAG..HEAD >> release-notes.md
          else
            echo "- Initial release" >> release-notes.md
          fi
          
          echo "" >> release-notes.md
          echo "### 📦 Installation" >> release-notes.md
          echo "" >> release-notes.md
          echo "\`\`\`bash" >> release-notes.md
          echo "npm install -g baseline-lint" >> release-notes.md
          echo "\`\`\`" >> release-notes.md
          echo "" >> release-notes.md
          echo "### 🚀 Usage" >> release-notes.md
          echo "" >> release-notes.md
          echo "\`\`\`bash" >> release-notes.md
          echo "baseline-lint check ./src" >> release-notes.md
          echo "baseline-lint score ./src" >> release-notes.md
          echo "\`\`\`" >> release-notes.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body_path: release-notes.md
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}

  # Publish to npm
  npm-publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [validate, github-release]
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version info
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          echo "version=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          npm version $VERSION --no-git-tag-version
          npm pkg set version="$VERSION"

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify npm publication
        run: |
          sleep 30  # Wait for npm propagation
          npm view baseline-lint@${{ steps.version.outputs.version }} version

  # Notify success
  notify:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [validate, github-release, npm-publish]
    if: always()
    
    steps:
      - name: Get version info
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Notify release success
        if: ${{ needs.validate.result == 'success' && needs.github-release.result == 'success' && needs.npm-publish.result == 'success' }}
        run: |
          echo "✅ Release ${{ steps.version.outputs.version }} completed successfully!"
          echo "📦 Published to npm: https://www.npmjs.com/package/baseline-lint"
          echo "🏷️ GitHub Release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }}"

      - name: Notify release failure
        if: ${{ needs.validate.result == 'failure' || needs.github-release.result == 'failure' || needs.npm-publish.result == 'failure' }}
        run: |
          echo "❌ Release ${{ steps.version.outputs.version }} failed!"
          echo "Check the workflow logs for details."
          exit 1
